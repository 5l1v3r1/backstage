scalar JSON
scalar JSONObject

type EntityMetadata {
  name: String!
  namespace: String!
  annotations: JSONObject!
  annotation(name: String!): JSON
  labels: JSONObject!
  label(name: String!): JSON
  uid: String!
  etag: String!
  generation: Int!
}

type ComponentEntitySpec {
  type: String!
  lifecycle: String!
  owner: String! # should be a reference to an owner type when this is implemented not a string
}

# need to work out a way that we can remove the base entity properties from each
# implementation. Should need to repeat for entity type as they are already provided. it's only
# the spec that is different.

type ComponentEntity implements CatalogEntity {
  apiVersion: String
  kind: String!
  metadata: EntityMetadata
  spec: ComponentEntitySpec!
}

type LocationEntitySpec {
  type: String!
  target: String
  targets: [String!]
}

type LocationEntity implements CatalogEntity {
  apiVersion: String
  kind: String!
  metadata: EntityMetadata
  spec: LocationEntitySpec!
}

type TemplateEntitySpec {
  type: String!
  templater: String!
  path: String
}

type TemplateEntity implements CatalogEntity {
  apiVersion: String
  kind: String!
  metadata: EntityMetadata
  spec: TemplateEntitySpec!
  schema: JSONObject!
}

interface CatalogEntity {
  apiVersion: String!
  kind: String!
  metadata: EntityMetadata!
}

type CatalogQuery {
  list: [CatalogEntity!]!
}

type Query {
  catalog: CatalogQuery!
}
